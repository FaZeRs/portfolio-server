version: '3.8'

services:
  api:
    build:
      context: ./api
    volumes:
      - ./api:/usr/src/app
      - ./api/node_modules:/usr/src/app/node_modules/
    environment:
      NODE_ENV: ${API_ENV}
      APP_PORT: ${API_PORT}
      DB_HOST: ${MYSQL_HOST}
      DB_PORT: ${MYSQL_PORT}
      DB_NAME: ${MYSQL_DB_NAME}
      DB_USER: ${MYSQL_USER}
      DB_PASS: ${MYSQL_PASS}
      JWT_ACCESS_TOKEN_EXP_IN_SEC: ${API_JWT_ACCESS_TOKEN_EXP_IN_SEC}
      JWT_REFRESH_TOKEN_EXP_IN_SEC: ${API_JWT_REFRESH_TOKEN_EXP_IN_SEC}
      JWT_PUBLIC_KEY_BASE64: ${API_JWT_PUBLIC_KEY_BASE64}
      JWT_PRIVATE_KEY_BASE64: ${API_JWT_PRIVATE_KEY_BASE64}
      DEFAULT_ADMIN_USER_PASSWORD: ${API_DEFAULT_ADMIN_USER_PASSWORD}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_FROM: ${MAIL_FROM}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      SENTRY_DSN: ${API_SENTRY_DSN}
      AWS_S3_ENDPOINT: ${AWS_S3_ENDPOINT}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_S3_ACCESS_KEY: ${AWS_S3_ACCESS_KEY}
      AWS_S3_SECRET_KEY: ${AWS_S3_SECRET_KEY}
      AWS_S3_REGION: ${AWS_S3_REGION}
    depends_on:
      - mysqldb
      - redis
      - minio
      - reverse-proxy
    networks:
      - traefik_proxy
      - internal
    labels:
      - traefik.enable=true     
      - traefik.http.routers.api.rule=Host(`${API_DOMAIN?Variable not set}`)
      - traefik.http.routers.api.entrypoints=web,web-secure
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.service=api
      - traefik.http.middlewares.api.redirectscheme.scheme=https
      - traefik.http.middlewares.api.redirectscheme.permanent=true
      - traefik.http.services.api.loadbalancer.server.port=3000

  client:
    build:
      context: ./client
      args:
        - NODE_ENV=${CLIENT_ENV}
        - BASE_URL=${CLIENT_DOMAIN}
        - APP_TITLE=${CLIENT_APP_TITLE}
        - APP_SHORT_NAME=${CLIENT_APP_SHORT_NAME}
        - GITHUB_URL=${CLIENT_GITHUB_URL}
        - FACEBOOK_URL=${CLIENT_FACEBOOK_URL}
        - TWITTER_URL=${CLIENT_TWITTER_URL}
        - LINKEDIN_URL=${CLIENT_LINKEDIN_URL}
        - EMAIL=${CLIENT_EMAIL}
        - API_URL=${CLIENT_API_URL}
        - BASE_URL=${CLIENT_BASE_URL}
    volumes:
      - ./client:/usr/src/app
      - ./client/node_modules:/usr/src/app/node_modules/
    depends_on:
      - api
      - reverse-proxy
    networks:
      - traefik_proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.client.rule=Host(`${CLIENT_DOMAIN?Variable not set}`)
      - traefik.http.routers.client.entrypoints=web,web-secure
      - traefik.http.routers.client.tls=true
      - traefik.http.routers.client.service=client
      - traefik.http.middlewares.client.redirectscheme.scheme=https
      - traefik.http.middlewares.client.redirectscheme.permanent=true
      - traefik.http.services.client.loadbalancer.server.port=80

  mysqldb:
    image: mysql:latest
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ${DATA_PATH_HOST}/mysqldb:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASS}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASS}
      MYSQL_DATABASE: ${MYSQL_DB_NAME}
    networks:
      - internal

  redis:
    image: redis:alpine
    restart: unless-stopped
    command: --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ${DATA_PATH_HOST}/redis:/data
    networks:
      - internal

  minio:
    image: quay.io/minio/minio:latest
    restart: unless-stopped
    command: server /data --address ":9000" --console-address ":9001"
    expose:
      - 9000
      - 9001
    environment:
      MINIO_ROOT_USER: ${AWS_S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${AWS_S3_SECRET_KEY}
      # Do NOT use MINIO_DOMAIN or MINIO_SERVER_URL with Traefik.
      # All Routing is done by Traefik, just tell minio where to redirect to.
      MINIO_BROWSER_REDIRECT_URL: http://${MINIO_CONSOLE_DOMAIN}
    volumes:
      - ${DATA_PATH_HOST}/minio:/data
    networks:
      - traefik_proxy
      - internal
    depends_on:
      - reverse-proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.minio-console.rule=Host(`${MINIO_CONSOLE_DOMAIN?Variable not set}`)
      - traefik.http.routers.minio-console.entrypoints=web,web-secure
      - traefik.http.routers.minio-console.tls=true
      - traefik.http.routers.minio-console.service=minio-console
      - traefik.http.middlewares.minio-console.redirectscheme.scheme=https
      - traefik.http.middlewares.minio-console.redirectscheme.permanent=true
      - traefik.http.services.minio-console.loadbalancer.server.port=9001

      - traefik.http.routers.minio.rule=Host(`${MINIO_DOMAIN?Variable not set}`)
      - traefik.http.routers.minio.entrypoints=web,web-secure
      - traefik.http.routers.minio.tls=true
      - traefik.http.routers.minio.service=minio
      - traefik.http.middlewares.minio.redirectscheme.scheme=https
      - traefik.http.middlewares.minio.redirectscheme.permanent=true
      - traefik.http.services.minio.loadbalancer.server.port=9000

  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:latest
    restart: unless-stopped
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - --providers.docker
    ports:
      # Listen on port 80, default for HTTP, necessary to redirect to HTTPS
      - 80:80
      # Listen on port 443, default for HTTPS
      - 443:443
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/static.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic.yml:/etc/traefik/dynamic/dynamic.yaml
      - ./ssl:/etc/ssl/traefik
    networks:
      - traefik_proxy
      - internal
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.admin-auth.basicauth.users=${TRAEFIK_USERNAME?Variable not set}:${TRAEFIK_PASSWORD?Variable not set}
      - traefik.http.routers.traefik-public.rule=Host(`${TRAEFIK_DOMAIN?Variable not set}`)
      - traefik.http.routers.traefik-public.entrypoints=web,web-secure
      - traefik.http.middlewares.traefik-public.redirectscheme.scheme=https
      - traefik.http.middlewares.traefik-public.redirectscheme.permanent=true
      - traefik.http.routers.traefik-public.tls=true
      - traefik.http.routers.traefik-public.service=api@internal
      - traefik.http.routers.traefik-public.middlewares=admin-auth
      - traefik.http.services.traefik-public.loadbalancer.server.port=8080

volumes:
  node_modules:
  mysqldb:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}
  minio:
    driver: ${VOLUMES_DRIVER}
  ssl:

networks:
  traefik_proxy:
    driver: ${NETWORKS_DRIVER}
  internal:
    driver: ${NETWORKS_DRIVER}